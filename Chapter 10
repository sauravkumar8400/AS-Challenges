EXERCISE 1
import turtle

turtle.setup(400,500)              
wn = turtle.Screen()             
wn.title("Handling keypresses!")  
wn.bgcolor("lightgreen")          
tess = turtle.Turtle()            


def h1():
   tess.forward(30)

def h2():
   tess.left(45)

def h3():
   tess.right(45)

def h4():
    wn.bye()                      

def h5():
    tess.color("red")

def h6():
    tess.color("green")

def h7():
    tess.color("blue")
    
wn.onkey(h1, "Up")
wn.onkey(h2, "Left")
wn.onkey(h3, "Right")
wn.onkey(h4, "q")
wn.onkey(h5, "r")
wn.onkey(h6, "g
wn.onkey(h7, "b")

wn.listen()
wn.mainloop()




EXERCISE 2

import turtle           # Tess becomes a traffic light.

turtle.setup(400,500)
wn = turtle.Screen()
wn.title("Tess becomes a traffic light!")
wn.bgcolor("lightgreen")
tess = turtle.Turtle()


def draw_housing():
    """ Draw a nice housing to hold the traffic lights """
    tess.pensize(3)
    tess.color("black", "darkgrey")
    tess.begin_fill()
    tess.forward(80)
    tess.left(90)
    tess.forward(200)
    tess.circle(40, 180)
    tess.forward(200)
    tess.left(90)
    tess.end_fill()


draw_housing()

tess.penup()
# Position tess onto the place where the green light should be
tess.forward(40)
tess.left(90)
tess.forward(50)
# Turn tess into a big green circle
tess.shape("circle")
tess.shapesize(3)
tess.fillcolor("green")

# A traffic light is a kind of state machine with three states,
# Green, Orange, Red.  We number these states  0, 1, 2
# When the machine changes state, we change tess' position and
# her fillcolor.

# This variable holds the current state of the machine
state_num = 0


def advance_state_machine():
    global state_num
    if state_num == 0:       # Transition from state 0 to state 1
        tess.forward(70)
        tess.fillcolor("orange")
        state_num = 1
    elif state_num == 1:     # Transition from state 1 to state 2
        tess.forward(70)
        tess.fillcolor("red")
        state_num = 2
    else:                    # Transition from state 2 to state 0
        tess.back(140)
        tess.fillcolor("green")
        state_num = 0
    wn.ontimer(advance_state_machine, 1000)

# Bind the event handler to the space key.

advance_state_machine()
wn.listen()                      # Listen for events
wn.mainloop()



EXERCISE 3

import turtle           # Tess becomes a traffic light.
wn = turtle.Screen()
wn.setup(400,500)
wn.title("Tess becomes a traffic light!")
wn.bgcolor("lightgreen")
tess = turtle.Turtle()
tess2 = turtle.Turtle()
tess3 = turtle.Turtle()

def draw_housing():
    """ Draw a nice housing to hold the traffic lights """
    tess.pensize(3)
    tess.color("black", "darkgrey")
    tess.begin_fill()
    tess.forward(80)
    tess.left(90)
    tess.forward(200)
    tess.circle(40, 180)
    tess.forward(200)
    tess.left(90)
    tess.end_fill()

    tess2.pensize(3)
    tess3.pensize(3)


draw_housing()

tess.penup()
tess2.penup()
tess3.penup()
# Position tess onto the place where the green light should be
tess.forward(40)
tess.left(90)
tess.forward(50)
tess2.forward(40)
tess2.left(90)
tess2.forward(120)
tess3.forward(40)
tess3.left(90)
tess3.forward(190)
# Turn tess into a big green circle
tess.shape("circle")
tess.shapesize(3)
tess.fillcolor("green")
tess2.shape("circle")
tess2.shapesize(3)
tess2.fillcolor("orange")
tess3.shape("circle")
tess3.shapesize(3)
tess3.fillcolor("red")
# A traffic light is a kind of state machine with three states,
# Green, Orange, Red.  We number these states  0, 1, 2
# When the machine changes state, we change tess' position and
# her fillcolor.
# This variable holds the current state of the machine
tess.hideturtle()
tess2.hideturtle()
tess3.hideturtle()
state_num = 0
def advance_state_machine():
    global state_num
    if state_num == 0:       # Transition from state 0 to state 1
        tess.showturtle()
        tess.right(90)
        tess.hideturtle()
        state_num = 1
    elif state_num == 1:     # Transition from state 1 to state 2
        tess2.showturtle()
        tess2.right(90)
        tess2.hideturtle()
        state_num = 2
    else:                    # Transition from state 2 to state 0
        tess3.showturtle()
        tess3.right(90)
        tess3.hideturtle()
        state_num = 0
    wn.ontimer(advance_state_machine, 1000)
advance_state_machine()
wn.listen()
wn.mainloop()

EXERICSE 4

import turtle           # Tess becomes a traffic light.
wn = turtle.Screen()
wn.setup(400,500)
wn.title("Tess becomes a traffic light!")
wn.bgcolor("lightgreen")
tess = turtle.Turtle()
tess2 = turtle.Turtle()
tess3 = turtle.Turtle()

def draw_housing():
    """ Draw a nice housing to hold the traffic lights """
    tess.pensize(3)
    tess.color("black", "darkgrey")
    tess.begin_fill()
    tess.forward(80)
    tess.left(90)
    tess.forward(200)
    tess.circle(40, 180)
    tess.forward(200)
    tess.left(90)
    tess.end_fill()

    tess2.pensize(3)
    tess3.pensize(3)


draw_housing()

tess.penup()
tess2.penup()
tess3.penup()
# Position tess onto the place where the green light should be
tess.forward(40)
tess.left(90)
tess.forward(50)
tess2.forward(40)
tess2.left(90)
tess2.forward(120)
tess3.forward(40)
tess3.left(90)
tess3.forward(190)
# Turn tess into a big green circle
tess.shape("circle")
tess.shapesize(3)
tess.fillcolor("brown")
tess2.shape("circle")
tess2.shapesize(3)
tess2.fillcolor("gold")
tess3.shape("circle")
tess3.shapesize(3)
tess3.fillcolor("maroon")
# A traffic light is a kind of state machine with three states,
# Green, Orange, Red.  We number these states  0, 1, 2
# When the machine changes state, we change tess' position and
# her fillcolor.
# This variable holds the current state of the machine

state_num = 0
def advance_state_machine():
    global state_num
    if state_num == 0:
        tess3.fillcolor("maroon")
        tess2.fillcolor("gold")
        tess.fillcolor("green")
        tess.right(90)
        state_num = 1
    elif state_num == 1:
        tess3.fillcolor("maroon")
        tess.fillcolor("brown")
        tess2.fillcolor("yellow")
        state_num = 2
    else:                    # Transition from state 2 to state 0
        tess3.fillcolor("red")
        tess2.fillcolor("gold")
        tess.fillcolor("brown")
        tess3.right(90)
        state_num = 0
    wn.ontimer(advance_state_machine, 1000)
advance_state_machine()
wn.listen()
wn.mainloop()


EXERCISE 5

import turtle           # Tess becomes a traffic light.
wn = turtle.Screen()
wn.setup(400,500)
wn.title("Tess becomes a traffic light!")
wn.bgcolor("lightgreen")
tess = turtle.Turtle()
tess2 = turtle.Turtle()
tess3 = turtle.Turtle()

def draw_housing():
    """ Draw a nice housing to hold the traffic lights """
    tess.pensize(3)
    tess.color("black", "darkgrey")
    tess.begin_fill()
    tess.forward(80)
    tess.left(90)
    tess.forward(200)
    tess.circle(40, 180)
    tess.forward(200)
    tess.left(90)
    tess.end_fill()

    tess2.pensize(3)
    tess3.pensize(3)


draw_housing()

tess.penup()
tess2.penup()
tess3.penup()
# Position tess onto the place where the green light should be
tess.forward(40)
tess.left(90)
tess.forward(50)
tess2.forward(40)
tess2.left(90)
tess2.forward(120)
tess3.forward(40)
tess3.left(90)
tess3.forward(190)
# Turn tess into a big green circle
tess.shape("circle")
tess.shapesize(3)
tess.fillcolor("brown")
tess2.shape("circle")
tess2.shapesize(3)
tess2.fillcolor("gold")
tess3.shape("circle")
tess3.shapesize(3)
tess3.fillcolor("maroon")
# A traffic light is a kind of state machine with three states,
# Green, Orange, Red.  We number these states  0, 1, 2
# When the machine changes state, we change tess' position and
# her fillcolor.
# This variable holds the current state of the machine

state_num = 0
def advance_state_machine():
    global state_num
    if state_num == 0:
        tess3.fillcolor("maroon")
        tess2.fillcolor("gold")
        tess.fillcolor("green")
        tess.right(90)
        state_num = 1

    elif state_num == 1:
        tess3.fillcolor("maroon")
        tess.fillcolor("green")
        tess2.fillcolor("yellow")
        state_num = 2

    elif state_num == 2:
        tess3.fillcolor("maroon")
        tess.fillcolor("brown")
        tess2.fillcolor("yellow")
        state_num = 3

    else:
        tess3.fillcolor("red")
        tess2.fillcolor("gold")
        tess.fillcolor("brown")
        tess3.right(90)
        state_num = 0

    if state_num == 0:
        wn.ontimer(advance_state_machine, 2000)

    if state_num == 1:
        wn.ontimer(advance_state_machine, 3000)

    if state_num == 2:
        wn.ontimer(advance_state_machine, 1000)

    if state_num == 3:
        wn.ontimer(advance_state_machine, 1000)

advance_state_machine()
wn.listen()
wn.mainloop()

