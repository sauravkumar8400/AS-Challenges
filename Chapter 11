EXERCISE 1

Creates a list with the items 10, 8, 6, 4, 2 which is calculated by appending the new number after being decreased by 2 from 10 (inclusive) to 0 (exclusive)

The three arguments to the range function are start, stop, and step, respectively. In this example, start is greater than stop. What happens if start < stop and step < 0? Write a rule for the relationships among start, stop, and step.
If start < stop and step < 0, the range would generate an infinite number of items

EXERCISE 2
only one instance is created, not two. changing the colour of alex changes the colour of tess as well since they are "linked," so only one turtle remains

EXERCISE 3
a = [1, 2, 3]
b = [1, 2, 3]

b[0] = 5

a = [1, 2, 3]
b = [5, 2, 3]

EXERCISE 4
this = ["I", "am", "not", "a", "crook"]
that = ["I", "am", "not", "a", "crook"]
print("Test 1: {0}".format(this is that))   - .format checks if the variable "this" links directly to the variable "that" , which they don't. 
that = this  - linking the variable "that" to the list "this"
print("Test 2: {0}".format(this is that)) - the variables have been linked, the test would return true since the list refers to both variables

EXERCISE 5
def add_vectors(a,b):
    l = []
    for i in range(0,len(a)):
        l.append(a[i]+b[i])
    return l

test(add_vectors([1, 1], [1, 1]) == [2, 2])
test(add_vectors([1, 2], [1, 4]) == [2, 6])
test(add_vectors([1, 2, 1], [1, 4, 3]) == [2, 6, 4])


EXERCISE 6
def scalar_mult(s,v):
    l = []
    for i in v:
        l.append(s*i)
    return l

test(scalar_mult(5, [1, 2]) == [5, 10])
test(scalar_mult(3, [1, 0, -1]) == [3, 0, -3])
test(scalar_mult(7, [3, 0, 5, 11, 2]) == [21, 0, 35, 77, 14]



EXERCISE 10

def replace(s,old,new):
    s = new.join(s.split(old))
    return s

test(replace("Mississippi", "i", "I") == "MIssIssIppI")

s = "I love spom! Spom is my favorite food. Spom, spom, yum!"
test(replace(s, "om", "am") ==
    "I love spam! Spam is my favorite food. Spam, spam, yum!")

test(replace(s, "o", "a") ==
    "I lave spam! Spam is my favarite faad. Spam, spam, yum!")
   
EXERCISE 11

values of a and b are not changed outside the function
